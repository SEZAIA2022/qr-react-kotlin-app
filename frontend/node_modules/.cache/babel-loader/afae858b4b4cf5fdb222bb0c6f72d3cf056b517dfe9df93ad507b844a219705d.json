{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ehsan\\\\Downloads\\\\qr_react_project\\\\frontend\\\\src\\\\components\\\\QuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionForm = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [selected, setSelected] = useState({});\n  const [message, setMessage] = useState('');\n  const [editId, setEditId] = useState(null);\n  const [editText, setEditText] = useState('');\n\n  // Charger les questions depuis l'API Flask\n  const fetchQuestions = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/questions');\n      setQuestions(res.data);\n      setSelected({});\n      setEditId(null);\n      setEditText('');\n    } catch (error) {\n      setMessage('Erreur lors du chargement des questions.');\n    }\n  };\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  // Ajouter une question\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/questions', {\n        text\n      });\n      setMessage('✅ Question ajoutée avec succès !');\n      setText('');\n      fetchQuestions();\n    } catch (error) {\n      setMessage(\"❌ Erreur lors de l'ajout.\");\n    }\n  };\n\n  // Gérer la sélection des checkboxes\n  const toggleSelect = id => {\n    setSelected(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  // Supprimer plusieurs questions sélectionnées\n  const deleteSelected = async () => {\n    const idsToDelete = Object.entries(selected).filter(([_, isChecked]) => isChecked).map(([id]) => id);\n    if (idsToDelete.length === 0) {\n      setMessage('Veuillez sélectionner au moins une question à supprimer.');\n      return;\n    }\n    try {\n      await Promise.all(idsToDelete.map(id => axios.delete(`http://localhost:5000/api/delete_question/${id}`)));\n      setMessage(`✅ ${idsToDelete.length} question(s) supprimée(s) avec succès.`);\n      fetchQuestions();\n    } catch (error) {\n      setMessage('Erreur lors de la suppression des questions.');\n    }\n  };\n\n  // Supprimer une seule question\n  const deleteQuestion = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/delete_question/${id}`);\n      setMessage('✅ Question supprimée avec succès.');\n      fetchQuestions();\n    } catch (error) {\n      setMessage('Erreur lors de la suppression de la question.');\n    }\n  };\n\n  // Démarrer l'édition\n  const startEditing = (id, currentText) => {\n    setEditId(id);\n    setEditText(currentText);\n  };\n\n  // Annuler édition\n  const cancelEditing = () => {\n    setEditId(null);\n    setEditText('');\n  };\n\n  // Sauvegarder édition\n  const saveEdit = async () => {\n    if (!editText.trim()) {\n      setMessage('Le texte ne peut pas être vide.');\n      return;\n    }\n    try {\n      await axios.put(`http://localhost:5000/api/edit_question/${editId}`, {\n        text: editText\n      });\n      setMessage('✅ Question modifiée avec succès.');\n      setEditId(null);\n      setEditText('');\n      fetchQuestions();\n    } catch (error) {\n      setMessage('Erreur lors de la modification.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter une Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 4,\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"\\xC9cris ta question ici\",\n        style: textareaStyle,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyle,\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: '40px'\n      },\n      children: \"Liste des Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: messageStyle,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteSelected,\n      style: {\n        ...buttonStyle,\n        marginBottom: '15px',\n        backgroundColor: '#dc3545'\n      },\n      children: \"Supprimer la s\\xE9lection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: listStyle,\n      children: questions.map(({\n        id,\n        text\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"question-item\",\n        style: listItemStyle,\n        onMouseEnter: e => e.currentTarget.style.backgroundColor = '#f0f5ff',\n        onMouseLeave: e => e.currentTarget.style.backgroundColor = 'transparent',\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: !!selected[id],\n          onChange: () => toggleSelect(id),\n          style: checkboxStyle,\n          \"aria-label\": `Sélectionner la question ${id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), editId === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 2,\n            value: editText,\n            onChange: e => setEditText(e.target.value),\n            style: textareaEditStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveEdit,\n            className: \"question-icon-button\",\n            title: \"Enregistrer\",\n            style: {\n              marginRight: '8px'\n            },\n            children: \"\\uD83D\\uDCBE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelEditing,\n            className: \"question-icon-button\",\n            title: \"Annuler\",\n            children: \"\\u2716\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: questionTextStyle,\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEditing(id, text),\n            className: \"question-icon-button\",\n            \"aria-label\": `Éditer la question ${id}`,\n            title: \"\\xC9diter\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (window.confirm(\"Voulez-vous vraiment supprimer cette question ?\")) {\n                deleteQuestion(id);\n              }\n            },\n            className: \"question-icon-button\",\n            \"aria-label\": `Supprimer la question ${id}`,\n            title: \"Supprimer\",\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles\n_s(QuestionForm, \"79WioG3MpWEXIQj0XkHk58Stpb4=\");\n_c = QuestionForm;\nconst containerStyle = {\n  maxWidth: '600px',\n  margin: '20px auto',\n  fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n  padding: '20px',\n  backgroundColor: '#f9faff',\n  borderRadius: '8px',\n  boxShadow: '0 2px 10px rgba(0,0,0,0.05)'\n};\nconst formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '15px'\n};\nconst textareaStyle = {\n  padding: '10px',\n  fontSize: '16px',\n  borderRadius: '8px',\n  border: '1.5px solid #ccc',\n  resize: 'vertical',\n  minHeight: '100px',\n  fontFamily: 'inherit'\n};\nconst buttonStyle = {\n  backgroundColor: '#007bff',\n  color: '#fff',\n  fontWeight: 'bold',\n  border: 'none',\n  padding: '12px',\n  borderRadius: '8px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  transition: 'background-color 0.3s'\n};\nconst messageStyle = {\n  fontWeight: 'bold',\n  color: '#333'\n};\nconst listStyle = {\n  listStyleType: 'none',\n  padding: 0,\n  maxHeight: '350px',\n  overflowY: 'auto',\n  borderTop: '2px solid #007bff',\n  borderRadius: '0 0 8px 8px',\n  boxShadow: 'inset 0 2px 6px rgba(0,0,0,0.05)',\n  backgroundColor: '#ffffff'\n};\nconst listItemStyle = {\n  padding: '12px 15px',\n  borderBottom: '1px solid #e1e7f0',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'default',\n  transition: 'background-color 0.25s ease'\n};\nconst checkboxStyle = {\n  marginRight: '15px',\n  width: '20px',\n  height: '20px',\n  cursor: 'pointer'\n};\nconst questionTextStyle = {\n  flex: 1,\n  fontSize: '16px',\n  color: '#2c3e50',\n  userSelect: 'none'\n};\nconst textareaEditStyle = {\n  padding: '8px',\n  fontSize: '15px',\n  borderRadius: '6px',\n  border: '1.5px solid #007bff',\n  boxShadow: '0 0 8px rgba(0,123,255,0.2)',\n  resize: 'vertical',\n  minHeight: '60px',\n  marginRight: '12px',\n  flex: 1,\n  fontFamily: 'inherit'\n};\nconst iconButtonBase = {\n  backgroundColor: 'transparent',\n  border: 'none',\n  cursor: 'pointer',\n  fontSize: '22px',\n  padding: '6px 10px',\n  color: '#007bff',\n  borderRadius: '6px',\n  transition: 'background-color 0.3s, color 0.3s'\n};\nconst iconButtonHover = {\n  backgroundColor: '#007bff',\n  color: '#fff'\n};\n\n// On applique iconButtonBase pour chaque bouton, inline style dans JSX ci-dessus.\n\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionForm","_s","text","setText","questions","setQuestions","selected","setSelected","message","setMessage","editId","setEditId","editText","setEditText","fetchQuestions","res","get","data","error","handleSubmit","e","preventDefault","trim","post","toggleSelect","id","prev","deleteSelected","idsToDelete","Object","entries","filter","_","isChecked","map","length","Promise","all","delete","deleteQuestion","startEditing","currentText","cancelEditing","saveEdit","put","style","containerStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formStyle","rows","value","onChange","target","placeholder","textareaStyle","required","type","buttonStyle","marginTop","messageStyle","onClick","marginBottom","backgroundColor","listStyle","className","listItemStyle","onMouseEnter","currentTarget","onMouseLeave","checked","checkboxStyle","textareaEditStyle","title","marginRight","questionTextStyle","window","confirm","_c","maxWidth","margin","fontFamily","padding","borderRadius","boxShadow","display","flexDirection","gap","fontSize","border","resize","minHeight","color","fontWeight","cursor","transition","listStyleType","maxHeight","overflowY","borderTop","borderBottom","alignItems","width","height","flex","userSelect","iconButtonBase","iconButtonHover","$RefreshReg$"],"sources":["C:/Users/ehsan/Downloads/qr_react_project/frontend/src/components/QuestionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuestionForm = () => {\r\n  const [text, setText] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selected, setSelected] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [editId, setEditId] = useState(null);\r\n  const [editText, setEditText] = useState('');\r\n\r\n  // Charger les questions depuis l'API Flask\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/questions');\r\n      setQuestions(res.data);\r\n      setSelected({});\r\n      setEditId(null);\r\n      setEditText('');\r\n    } catch (error) {\r\n      setMessage('Erreur lors du chargement des questions.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  // Ajouter une question\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) return;\r\n    try {\r\n      await axios.post('http://localhost:5000/api/questions', { text });\r\n      setMessage('✅ Question ajoutée avec succès !');\r\n      setText('');\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      setMessage(\"❌ Erreur lors de l'ajout.\");\r\n    }\r\n  };\r\n\r\n  // Gérer la sélection des checkboxes\r\n  const toggleSelect = (id) => {\r\n    setSelected((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  // Supprimer plusieurs questions sélectionnées\r\n  const deleteSelected = async () => {\r\n    const idsToDelete = Object.entries(selected)\r\n      .filter(([_, isChecked]) => isChecked)\r\n      .map(([id]) => id);\r\n\r\n    if (idsToDelete.length === 0) {\r\n      setMessage('Veuillez sélectionner au moins une question à supprimer.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await Promise.all(\r\n        idsToDelete.map((id) =>\r\n          axios.delete(`http://localhost:5000/api/delete_question/${id}`)\r\n        )\r\n      );\r\n      setMessage(`✅ ${idsToDelete.length} question(s) supprimée(s) avec succès.`);\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      setMessage('Erreur lors de la suppression des questions.');\r\n    }\r\n  };\r\n\r\n  // Supprimer une seule question\r\n  const deleteQuestion = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/delete_question/${id}`);\r\n      setMessage('✅ Question supprimée avec succès.');\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      setMessage('Erreur lors de la suppression de la question.');\r\n    }\r\n  };\r\n\r\n  // Démarrer l'édition\r\n  const startEditing = (id, currentText) => {\r\n    setEditId(id);\r\n    setEditText(currentText);\r\n  };\r\n\r\n  // Annuler édition\r\n  const cancelEditing = () => {\r\n    setEditId(null);\r\n    setEditText('');\r\n  };\r\n\r\n  // Sauvegarder édition\r\n  const saveEdit = async () => {\r\n    if (!editText.trim()) {\r\n      setMessage('Le texte ne peut pas être vide.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/edit_question/${editId}`, {\r\n        text: editText,\r\n      });\r\n      setMessage('✅ Question modifiée avec succès.');\r\n      setEditId(null);\r\n      setEditText('');\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      setMessage('Erreur lors de la modification.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2>Ajouter une Question</h2>\r\n      <form onSubmit={handleSubmit} style={formStyle}>\r\n        <textarea\r\n          rows={4}\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Écris ta question ici\"\r\n          style={textareaStyle}\r\n          required\r\n        />\r\n        <button type=\"submit\" style={buttonStyle}>\r\n          Ajouter\r\n        </button>\r\n      </form>\r\n\r\n      <h2 style={{ marginTop: '40px' }}>Liste des Questions</h2>\r\n      {message && <p style={messageStyle}>{message}</p>}\r\n\r\n      <button\r\n        onClick={deleteSelected}\r\n        style={{ ...buttonStyle, marginBottom: '15px', backgroundColor: '#dc3545' }}\r\n      >\r\n        Supprimer la sélection\r\n      </button>\r\n\r\n      <ul style={listStyle}>\r\n        {questions.map(({ id, text }) => (\r\n          <li\r\n            key={id}\r\n            className=\"question-item\"\r\n            style={listItemStyle}\r\n            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#f0f5ff'}\r\n            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'transparent'}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={!!selected[id]}\r\n              onChange={() => toggleSelect(id)}\r\n              style={checkboxStyle}\r\n              aria-label={`Sélectionner la question ${id}`}\r\n            />\r\n\r\n            {editId === id ? (\r\n              <>\r\n                <textarea\r\n                  rows={2}\r\n                  value={editText}\r\n                  onChange={(e) => setEditText(e.target.value)}\r\n                  style={textareaEditStyle}\r\n                />\r\n                <button\r\n                  onClick={saveEdit}\r\n                  className=\"question-icon-button\"\r\n                  title=\"Enregistrer\"\r\n                  style={{ marginRight: '8px' }}\r\n                >\r\n                  💾\r\n                </button>\r\n                <button\r\n                  onClick={cancelEditing}\r\n                  className=\"question-icon-button\"\r\n                  title=\"Annuler\"\r\n                >\r\n                  ✖️\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span style={questionTextStyle}>{text}</span>\r\n\r\n                <button\r\n                  onClick={() => startEditing(id, text)}\r\n                  className=\"question-icon-button\"\r\n                  aria-label={`Éditer la question ${id}`}\r\n                  title=\"Éditer\"\r\n                  style={{ marginRight: '10px' }}\r\n                >\r\n                  ✏️\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => {\r\n                    if (window.confirm(\"Voulez-vous vraiment supprimer cette question ?\")) {\r\n                      deleteQuestion(id);\r\n                    }\r\n                  }}\r\n                  className=\"question-icon-button\"\r\n                  aria-label={`Supprimer la question ${id}`}\r\n                  title=\"Supprimer\"\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles\r\n\r\nconst containerStyle = {\r\n  maxWidth: '600px',\r\n  margin: '20px auto',\r\n  fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n  padding: '20px',\r\n  backgroundColor: '#f9faff',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\r\n};\r\n\r\nconst formStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: '15px',\r\n};\r\n\r\nconst textareaStyle = {\r\n  padding: '10px',\r\n  fontSize: '16px',\r\n  borderRadius: '8px',\r\n  border: '1.5px solid #ccc',\r\n  resize: 'vertical',\r\n  minHeight: '100px',\r\n  fontFamily: 'inherit',\r\n};\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: '#007bff',\r\n  color: '#fff',\r\n  fontWeight: 'bold',\r\n  border: 'none',\r\n  padding: '12px',\r\n  borderRadius: '8px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  transition: 'background-color 0.3s',\r\n};\r\n\r\nconst messageStyle = {\r\n  fontWeight: 'bold',\r\n  color: '#333',\r\n};\r\n\r\nconst listStyle = {\r\n  listStyleType: 'none',\r\n  padding: 0,\r\n  maxHeight: '350px',\r\n  overflowY: 'auto',\r\n  borderTop: '2px solid #007bff',\r\n  borderRadius: '0 0 8px 8px',\r\n  boxShadow: 'inset 0 2px 6px rgba(0,0,0,0.05)',\r\n  backgroundColor: '#ffffff',\r\n};\r\n\r\nconst listItemStyle = {\r\n  padding: '12px 15px',\r\n  borderBottom: '1px solid #e1e7f0',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  cursor: 'default',\r\n  transition: 'background-color 0.25s ease',\r\n};\r\n\r\nconst checkboxStyle = {\r\n  marginRight: '15px',\r\n  width: '20px',\r\n  height: '20px',\r\n  cursor: 'pointer',\r\n};\r\n\r\nconst questionTextStyle = {\r\n  flex: 1,\r\n  fontSize: '16px',\r\n  color: '#2c3e50',\r\n  userSelect: 'none',\r\n};\r\n\r\nconst textareaEditStyle = {\r\n  padding: '8px',\r\n  fontSize: '15px',\r\n  borderRadius: '6px',\r\n  border: '1.5px solid #007bff',\r\n  boxShadow: '0 0 8px rgba(0,123,255,0.2)',\r\n  resize: 'vertical',\r\n  minHeight: '60px',\r\n  marginRight: '12px',\r\n  flex: 1,\r\n  fontFamily: 'inherit',\r\n};\r\n\r\nconst iconButtonBase = {\r\n  backgroundColor: 'transparent',\r\n  border: 'none',\r\n  cursor: 'pointer',\r\n  fontSize: '22px',\r\n  padding: '6px 10px',\r\n  color: '#007bff',\r\n  borderRadius: '6px',\r\n  transition: 'background-color 0.3s, color 0.3s',\r\n};\r\n\r\nconst iconButtonHover = {\r\n  backgroundColor: '#007bff',\r\n  color: '#fff',\r\n};\r\n\r\n// On applique iconButtonBase pour chaque bouton, inline style dans JSX ci-dessus.\r\n\r\nexport default QuestionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}